'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = rgba;

var _Image = require('../Image');

var _Image2 = _interopRequireDefault(_Image);

var _model = require('../model/model');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Make a copy of the current image and convert to RGBA
 * The source image must have RGB color model, 8 or 16 bits.
 * This method will add an alpha channel if required. In this case
 * the value for the alpha channel will be 100% opacity.
 * @memberof Image
 * @instance
 * @return {Image} - New image in RGB color model with alpha channel
 * @example
 * var rgbaImage = image.rgba();
 */
function rgba() {
    this.checkProcessable('rgba', {
        bitDepth: [8, 16],
        alpha: [0, 1],
        colorModel: [_model.RGB]
    });

    if (this.colorModel === _model.RGB && this.alpha) {
        return this.clone();
    }

    var newImage = _Image2.default.createFrom(this, {
        alpha: 1
    });

    var ptr = 0;
    var data = this.data;
    for (var i = 0; i < data.length; i += this.channels) {
        newImage.data[ptr++] = data[i];
        newImage.data[ptr++] = data[i + 1];
        newImage.data[ptr++] = data[i + 2];
        newImage.data[ptr++] = this.maxValue;
        ptr++;
    }

    return newImage;
}