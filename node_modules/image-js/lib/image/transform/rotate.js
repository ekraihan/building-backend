'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rotate = rotate;
exports.rotateLeft = rotateLeft;
exports.rotateRight = rotateRight;

var _Image = require('../Image');

var _Image2 = _interopRequireDefault(_Image);

var _rotateFree = require('./rotateFree');

var _rotateFree2 = _interopRequireDefault(_rotateFree);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Rotates an image
 * @memberof Image
 * @instance
 * @param {number} angle - angle of the rotation in degrees
 * @param {object} [options]
 * @return {Image} The new rotated image
 */
function rotate(angle, options) {
    if (typeof angle !== 'number') {
        throw new TypeError('angle must be a number');
    }

    if (angle < 0) {
        angle = Math.ceil(-angle / 360) * 360 + angle;
    }

    switch (angle % 360) {
        case 0:
            return this.clone();
        case 90:
            return rotateRight.call(this);
        case 180:
            return rotate180.call(this);
        case 270:
            return rotateLeft.call(this);
        default:
            return _rotateFree2.default.call(this, angle, options);
    }
}

/**
 * Rotates an image counter-clockwise
 * @memberof Image
 * @instance
 * @return {Image} The new rotated image
 */
function rotateLeft() {
    var newImage = _Image2.default.createFrom(this, { width: this.height, height: this.width });
    var newMaxHeight = newImage.height - 1;
    for (var i = 0; i < this.height; i++) {
        for (var j = 0; j < this.width; j++) {
            for (var k = 0; k < this.channels; k++) {
                newImage.setValueXY(i, newMaxHeight - j, k, this.getValueXY(j, i, k));
            }
        }
    }
    return newImage;
}

/**
 * Rotates an image clockwise
 * @memberof Image
 * @instance
 * @return {Image} The new rotated image
 */

function rotateRight() {
    var newImage = _Image2.default.createFrom(this, { width: this.height, height: this.width });
    var newMaxWidth = newImage.width - 1;
    for (var i = 0; i < this.height; i++) {
        for (var j = 0; j < this.width; j++) {
            for (var k = 0; k < this.channels; k++) {
                newImage.setValueXY(newMaxWidth - i, j, k, this.getValueXY(j, i, k));
            }
        }
    }
    return newImage;
}

function rotate180() {
    var newImage = _Image2.default.createFrom(this);
    var newMaxWidth = newImage.width - 1;
    var newMaxHeight = newImage.height - 1;
    for (var i = 0; i < this.height; i++) {
        for (var j = 0; j < this.width; j++) {
            for (var k = 0; k < this.channels; k++) {
                newImage.setValueXY(newMaxWidth - j, newMaxHeight - i, k, this.getValueXY(j, i, k));
            }
        }
    }
    return newImage;
}