'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = split;

var _Image = require('../Image');

var _Image2 = _interopRequireDefault(_Image);

var _Stack = require('../../stack/Stack');

var _Stack2 = _interopRequireDefault(_Stack);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @memberof Image
 * @instance
 * @param {object} [options]
 * @param {boolean} [options.preserveAlpha=true]
 * @return {Stack}
 */
function split(options = {}) {
    var _options$preserveAlph = options.preserveAlpha,
        preserveAlpha = _options$preserveAlph === undefined ? true : _options$preserveAlph;


    this.checkProcessable('split', {
        bitDepth: [8, 16]
    });

    // split will always return a stack of images
    if (this.components === 1) {
        return new _Stack2.default([this.clone()]);
    }

    var images = new _Stack2.default();

    var data = this.data;
    if (this.alpha && preserveAlpha) {
        for (var i = 0; i < this.components; i++) {
            var newImage = _Image2.default.createFrom(this, {
                components: 1,
                alpha: true,
                colorModel: null
            });
            var ptr = 0;
            for (var j = 0; j < data.length; j += this.channels) {
                newImage.data[ptr++] = data[j + i];
                newImage.data[ptr++] = data[j + this.components];
            }
            images.push(newImage);
        }
    } else {
        for (var _i = 0; _i < this.channels; _i++) {
            var _newImage = _Image2.default.createFrom(this, {
                components: 1,
                alpha: false,
                colorModel: null
            });
            var _ptr = 0;
            for (var _j = 0; _j < data.length; _j += this.channels) {
                _newImage.data[_ptr++] = data[_j + _i];
            }
            images.push(_newImage);
        }
    }

    return images;
}