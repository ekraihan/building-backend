'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = blurFilter;

var _convolutionFft = require('../operator/convolutionFft');

var _convolutionFft2 = _interopRequireDefault(_convolutionFft);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Apply a filter to blur the image
 * @memberof Image
 * @instance
 * @param {object} options
 * @param {number} [options.radius=1] : number of pixels around the current pixel to average
 * @return {Image}
 */
// first release of mean filter
function blurFilter(options = {}) {
    var _options$radius = options.radius,
        radius = _options$radius === undefined ? 1 : _options$radius;

    this.checkProcessable('meanFilter', {
        components: [1],
        bitDepth: [8, 16]
    });

    if (radius < 1) {
        throw new Error('Number of neighbors should be grater than 0');
    }

    var n = 2 * radius + 1;
    var size = n * n;
    var kernel = new Array(size);

    for (var i = 0; i < kernel.length; i++) {
        kernel[i] = 1;
    }

    return _convolutionFft2.default.call(this, kernel);
}