'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = sobelFilter;

var _convolution = require('../operator/convolution');

var _convolution2 = _interopRequireDefault(_convolution);

var _kernels = require('../../util/kernels');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @memberof Image
 * @instance
 * @param {object} [options]
 * @param {Array<Array<number>>} [options.kernelX]
 * @param {Array<Array<number>>} [options.kernelY]
 * @param {string} [options.border='copy']
 * @param {*} [options.channels]
 * #param {number} [options.bitDepth=this.bitDepth] Specify the bitDepth of the resulting image
 * @return {Image}
 */
function sobelFilter(options = {}) {
    var _options$kernelX = options.kernelX,
        kernelX = _options$kernelX === undefined ? _kernels.GRADIENT_X : _options$kernelX,
        _options$kernelY = options.kernelY,
        kernelY = _options$kernelY === undefined ? _kernels.GRADIENT_Y : _options$kernelY,
        _options$border = options.border,
        border = _options$border === undefined ? 'copy' : _options$border,
        channels = options.channels,
        _options$bitDepth = options.bitDepth,
        bitDepth = _options$bitDepth === undefined ? this.bitDepth : _options$bitDepth;


    this.checkProcessable('sobel', {
        bitDepth: [8, 16]
    });

    var gX = _convolution2.default.call(this, kernelX, {
        channels: channels,
        border: border,
        bitDepth: 32
    });

    var gY = _convolution2.default.call(this, kernelY, {
        channels: channels,
        border: border,
        bitDepth: 32
    });

    return gX.hypotenuse(gY, { bitDepth, channels: channels });
}